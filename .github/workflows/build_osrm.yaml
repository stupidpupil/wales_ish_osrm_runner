on: 
  workflow_dispatch:

name: build_osrm_and_prepare_graph

jobs:
  build_osrm_and_prepare_graph:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        if: steps.cache_osm.outputs.cache-hit != 'true'

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          install.packages(c("devtools"))
          devtools::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - uses: actions/checkout@v2
        with:
          repository: 'Project-OSRM/osrm-backend'
          path: 'osrm-backend'

      - name: Get osrm-backend ref
        id: osrm-backend-ref
        run: |
          echo "::set-output name=ref::$(git -C osrm-backend rev-parse HEAD)"
        shell: bash

      - name: Cache osrm-backend/build
        id: cache_osrm_backend_build
        uses: actions/cache@v2
        with:
          path: |
            osrm-backend/build
            osrm-backend/mason_packages
          key: ${{ runner.os }}-${{ steps.osrm-backend-ref.outputs.ref }}-v2

      - name: Build osrm-backend
        if: steps.cache_osrm_backend_build.outputs.cache-hit != 'true'
        run: |
          cd osrm-backend
          mkdir build
          cd build
          cmake ../ -DENABLE_MASON=1
          make
          cd ../../
        shell: bash

      - name: Fetch OSM
        run: |
          curl -LJ https://github.com/stupidpupil/wales_ish_otp_graph/releases/latest/download/gtfs_and_osm.zip -o gtfs_and_osm.zip
          unzip gtfs_and_osm.zip
          echo "disk=/tmp/stxxl,10G,syscall" > .stxxl
        shell: bash

      - name: Cache OSRM graph
        id: cache_osrm_graph
        uses: actions/cache@v2
        with:
          path: |
            gtfs_and_osm/*.osrm*
          key: ${{ runner.os }}-${{ steps.osrm-backend-ref.outputs.ref }}-${{ hashFiles('gtfs_and_osm/*.osm.pbf') }}-v2

      - name: Process OSM to OSRM graph
        if: steps.cache_osrm_graph.outputs.cache-hit != 'true'
        run: |
          ln -s osrm-backend/profiles/lib lib
          osrm-backend/build/osrm-extract -p osrm-backend/profiles/car.lua gtfs_and_osm/wales_ish.osm.pbf
          osrm-backend/build/osrm-contract gtfs_and_osm/wales_ish.osrm

      - name: Download trip points
        run: |
          curl https://raw.githubusercontent.com/stupidpupil/wales_lsoa_trip_points/main/data/lsoa11_nearest_road_points.geojson -o data/lsoa11_nearest_road_points.geojson

      - name: Produce coords.txt
        run: |
          devtools::load_all()
          produce_coords()
        shell: Rscript {0}

      - name: Cache output.json
        id: cache_output_json
        uses: actions/cache@v2
        with:
          path: |
            data/output.json
          key: ${{ steps.osrm-backend-ref.outputs.ref }}-${{ hashFiles('gtfs_and_osm/*.osrm*') }}-${{ hashFiles('data/coords.txt') }}-v1

      - name: Run OSRM and issue query
        if: steps.cache_output_json.outputs.cache-hit != 'true'
        run: |
          osrm-backend/build/osrm-routed --max-table-size=2000 --algorithm ch gtfs_and_osm/wales_ish.osrm &
          sleep 60
          COORDS=$(cat data/coords.txt)
          OSRM_URL="http://127.0.0.1:5000/table/v1/driving/$COORDS"
          curl $OSRM_URL -o "data/output.json"
        shell: bash

      - name: Upload output artifact
        uses: actions/upload-artifact@v2
        with:
          name: output.json
          path: data/output.json
          if-no-files-found: error

      - name: Produce travel-time matrix
        run: |
          devtools::load_all()
          translate_osrm_json_to_matrix() %>% write_csv("data/matrix.csv")
        shell: Rscript {0}

      - name: Upload matrix artifact
        uses: actions/upload-artifact@v2
        with:
          name: matrix.csv
          path: data/matrix.csv
          if-no-files-found: error

